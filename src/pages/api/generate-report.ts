import { NextApiRequest, NextApiResponse } from 'next';
import { getSession } from 'next-auth/react';
import prisma from '@/lib/prisma';
import puppeteer from 'puppeteer';

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const session = await getSession({ req });
  if (!session?.user) {
    return res.status(401).json({ message: 'Unauthorized' });
  }

  try {
    const { datasetId, visualizations } = req.body;

    const dataset = await prisma.dataset.findUnique({
      where: { id: datasetId },
    });

    if (!dataset) {
      return res.status(404).json({ message: 'Dataset not found' });
    }

    // Launch Puppeteer
    const browser = await puppeteer.launch();
    const page = await browser.newPage();

    // Generate HTML content for the report
    const htmlContent = generateReportHTML(dataset, visualizations);
    await page.setContent(htmlContent);

    // Generate PDF
    const pdf = await page.pdf({
      format: 'A4',
      printBackground: true,
      margin: { top: '1cm', right: '1cm', bottom: '1cm', left: '1cm' },
    });

    await browser.close();

    // Set response headers for PDF download
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', `attachment; filename=report-${datasetId}.pdf`);
    
    return res.send(pdf);
  } catch (error) {
    console.error('Report generation error:', error);
    return res.status(500).json({ message: 'Error generating report' });
  }
}

function generateReportHTML(dataset: any, visualizations: any[]) {
  return `
    <!DOCTYPE html>
    <html>
      <head>
        <title>Data Analysis Report</title>
        <style>
          body { font-family: Arial, sans-serif; }
          .header { text-align: center; margin-bottom: 2em; }
          .visualization { margin: 2em 0; }
          .footer { text-align: center; margin-top: 2em; }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>Data Analysis Report</h1>
          <h2>${dataset.name}</h2>
          <p>Generated on ${new Date().toLocaleDateString()}</p>
        </div>
        ${visualizations.map(viz => `
          <div class="visualization">
            <h3>${viz.title}</h3>
            <img src="${viz.imageData}" />
            <p>${viz.description}</p>
          </div>
        `).join('')}
        <div class="footer">
          <p>Generated by AI-Powered Data Analytics Platform</p>
        </div>
      </body>
    </html>
  `;
}
