// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  datasets      Dataset[]
  reports       Report[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Dataset {
  id        String   @id @default(cuid())
  name      String
  type      String
  data      Json
  cleaned   Boolean  @default(false)
  tag       String?  @default("raw")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reports   Report[]
}

model Report {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  datasetId    String
  dataset      Dataset  @relation(fields: [datasetId], references: [id])
  title        String
  content      String?
  metrics      String?
  visualizations String?
  exportFormat String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  shareToken   String?
  orientation  String?
  includeRawData Boolean? @default(false)
  status      String?    @default("draft")

  @@index([userId])
  @@index([datasetId])
}
